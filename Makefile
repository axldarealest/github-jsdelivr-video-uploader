# GitHub + jsDelivr Video Uploader - Makefile

.PHONY: help install setup upload list manage clean

help: ## Affiche l'aide
	@echo "üé• GitHub + jsDelivr Video Uploader"
	@echo "=================================="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

install: ## Installe les d√©pendances Python
	@echo "üì¶ Installation des d√©pendances..."
	pip install -r requirements.txt
	@echo "‚úÖ D√©pendances install√©es!"

setup: install ## Configure l'outil (premi√®re utilisation)
	@echo "üõ†Ô∏è Configuration de l'outil..."
	python setup.py

upload: ## Upload une vid√©o (usage: make upload VIDEO=ma_video.mp4)
	@if [ -z "$(VIDEO)" ]; then \
		echo "‚ùå Usage: make upload VIDEO=chemin/vers/video.mp4"; \
		exit 1; \
	fi
	@echo "üì§ Upload de $(VIDEO)..."
	python upload_video.py $(VIDEO)

list: ## Liste toutes les vid√©os upload√©es
	@echo "üìã Liste des vid√©os..."
	python manage_videos.py list

manage: ## Lance le gestionnaire interactif de vid√©os
	@echo "üéÆ Gestionnaire interactif..."
	python manage_videos.py

web: ## Lance l'interface web
	@echo "üåê D√©marrage de l'interface web..."
	@echo "üì± Disponible sur: http://localhost:8080"
	python3 web_uploader.py

deploy: ## D√©ploie l'interface web sur GitHub Pages
	@echo "üöÄ D√©ploiement sur GitHub Pages..."
	python deploy_web.py

clean: ## Nettoie les fichiers temporaires
	@echo "üßπ Nettoyage..."
	rm -rf __pycache__/
	rm -rf *.pyc
	rm -rf temp/
	rm -rf .pytest_cache/
	@echo "‚úÖ Nettoyage termin√©!"

example: ## Ouvre l'exemple HTML dans le navigateur
	@echo "üåê Ouverture de example.html..."
	@if command -v open >/dev/null 2>&1; then \
		open example.html; \
	elif command -v xdg-open >/dev/null 2>&1; then \
		xdg-open example.html; \
	else \
		echo "Ouvrez example.html dans votre navigateur"; \
	fi

# Raccourcis
init: setup ## Alias pour setup

# Commandes utiles pour le d√©veloppement
dev-install: ## Installation pour d√©veloppeurs
	pip install -r requirements.txt
	pip install black isort flake8

format: ## Formate le code
	black *.py
	isort *.py

lint: ## V√©rifie le code
	flake8 *.py --max-line-length=88 --ignore=E203,W503 